


name: "Testing Passing Around Variables"

on:
  workflow_dispatch:


permissions: read-all

jobs:
  job_1:
    runs-on: ubuntu-latest
    outputs:
      issueId: ${{ steps.extract.outputs.issueId }}
      STRING_VAR: ${{ steps.extract.outputs.STRING_VAR }}
      SET_TITLE: ${{ steps.extract.outputs.SET_TITLE }}

    steps:
      - name: Set output
        id: extract
        env:
          TITLE: "[CT-1428] just testing"
        run: |
          issueId=$(echo -n "${{env.TITLE}}" | awk '{print $1}' | awk -F'[][]' '{print $2}')
          echo "issueId=$issueId" >> $GITHUB_STATE
          echo "SET_TITLE="${{env.TITLE}} >> $GITHUB_STATE
          echo "STRING_VAR="some value" >> $GITHUB_STATE
          echo "Title:               ${{env.TITLE}}"
          echo "issueId:               $issueId"
      - name: Print output
        id: echo
        run: |
          echo "Title:               ${{env.SET_TITLE}}"
          echo "Issue ID:            ${{ steps.extract.outputs.issueId }}"
          echo "STRING_VAR:          ${{ steps.extract.outputs.STRING_VAR }}"

  job_2:
    runs-on: ubuntu-latest
    needs: job_1
    steps:
      - name: "Print Job 1 Outputs"
        shell: bash
        id: echo_inputs
        run: |
          echo "all variables defined as ouputs in previous jobs"
          echo "Issue ID:            ${{ needs.job_1.outputs.issueId }}"
          echo "Issue ID: (env)      ${{ env.issueId }}"
          echo "SET_TITLE:           ${{ env.SET_TITLE }}"
          echo "STRING_VAR:           ${{ needs.job_1.outputs.STRING_VAR }}"
          echo "STRING_VAR:           ${{ env.STRING_VAR }}"
